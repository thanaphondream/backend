generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model Search {
  id    Int    @id @default(autoincrement())
  name  String
  count Int
  // User User[]
}

model User {
  id       Int       @id @default(autoincrement())
  username String    @unique @db.VarChar(30)
  password String    @db.VarChar(72)
  email    String?
  phon     String?
  role     Role      @default(USER)
  Address  String    @db.VarChar(255)
  Payment  Payment[]

  @@map("users")
}

enum Status {
  PENDING
  DOING
  DONE
}

model Orders {
  id            Int         @id @default(autoincrement())
  orderDate     DateTime
  TotalAmount   Float
  // user          User       @relation(fields: [UserId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  UserId        Int
  OrderDate     OrderDate[]
}

model Menutems {
  id            Int         @id @default(autoincrement())
  ItemName      String
  price         Int
  description   String
  file          String
  OrderDate     OrderDate[]
  Payment       Payment[]
}

model Reviews {
  id            Int         @id @default(autoincrement())
  rating        Int
  comment       String
  // user          User       @relation(fields: [UserId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  UserId        Int

}


model OrderDate {
  id         Int      @id @default(autoincrement())
  quantity   Int
  order      Orders   @relation(fields: [ordersId], references: [id])
  ordersId   Int
  menutem    Menutems @relation(fields: [menutemsId], references: [id])
  menutemsId Int
}

model Payment {
  id         Int      @id @default(autoincrement())
  username   String
  namemenu   String
  price      Int
  userId     Int
  amount     Float
  pay        String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  menutem    Menutems @relation(fields: [menutemsId], references: [id])
  menutemsId Int
}
